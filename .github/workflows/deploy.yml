name: üöÄ Deploy to Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Test and Lint Job
  test:
    name: üß™ Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üîç Lint code
        run: npm run lint

      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_BUILD_TIME: ${{ github.event.head_commit.timestamp }}
          NEXT_PUBLIC_COMMIT_HASH: ${{ github.sha }}
          NEXT_PUBLIC_DEPLOY_TIME: ${{ github.event.head_commit.timestamp }}

  # Deploy to Preview (for PRs)
  deploy-preview:
    name: üîç Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_BUILD_TIME: ${{ github.event.head_commit.timestamp }}
          NEXT_PUBLIC_COMMIT_HASH: ${{ github.sha }}
          NEXT_PUBLIC_DEPLOY_TIME: ${{ github.event.head_commit.timestamp }}

      - name: üîß Set up Firebase CLI
        run: npm install -g firebase-tools@latest

      - name: üöÄ Deploy to Firebase Preview
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > /tmp/service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json
          export FIREBASE_CLI_EXPERIMENTS=webframeworks
          firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --force

  # Deploy to Production (main branch only)
  deploy-production:
    name: üöÄ Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://chrono-lens-ac1885.web.app
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_BUILD_TIME: ${{ github.event.head_commit.timestamp }}
          NEXT_PUBLIC_COMMIT_HASH: ${{ github.sha }}
          NEXT_PUBLIC_DEPLOY_TIME: ${{ github.event.head_commit.timestamp }}

      - name: üîß Set up Firebase CLI
        run: npm install -g firebase-tools@latest

      - name: üöÄ Deploy to Firebase Production
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > /tmp/service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json
          export FIREBASE_CLI_EXPERIMENTS=webframeworks
          firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --force

      - name: üì¨ Deployment Success Notification
        if: success()
        run: |
          echo "üéâ Deployment successful!"
          echo "üåê Live URL: https://chrono-lens-ac1885.web.app"
